name: Deploy to Production

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    environment: Production

    steps:
    - name: Checkout the code
      uses: actions/checkout@v4

    - name: Docker Login
      uses: docker/login-action@v3.0.0
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.TOKEN_DEPLOY }}
        logout: true
    
    - name: Build the Docker image
      run: docker build . --file ./docker/Dockerfile.prod --tag ghcr.io/carum98/skyradio-frontend:latest --build-arg ANALYTICS_HOST=${{ secrets.ANALYTICS_HOST }} --build-arg ANALYTICS_KEY=${{ secrets.ANALYTICS_KEY }} --build-arg CORS_ALLOW_ORIGIN=${{ secrets.CORS_ALLOW_ORIGIN }}

    - name: Send to registry
      run: docker push ghcr.io/carum98/skyradio-frontend:latest

  pull-image:
    runs-on: ubuntu-latest
    needs: build-and-push
    environment: Production

    steps:
    - name: Pull the image
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.SSH_HOST }}
        port: ${{ secrets.SSH_PORT }}
        username: ${{ secrets.SSH_USERNAME }}
        password: ${{ secrets.SSH_PASSWORD }}
        script: |
          docker login ghcr.io -u ${{ github.actor }} -p ${{ secrets.TOKEN_DEPLOY }} &&
          docker pull ghcr.io/carum98/skyradio-frontend:latest

  create-folder:
    runs-on: ubuntu-latest
    environment: Production

    steps:
    - name: Create folder
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.SSH_HOST }}
        port: ${{ secrets.SSH_PORT }}
        username: ${{ secrets.SSH_USERNAME }}
        password: ${{ secrets.SSH_PASSWORD }}
        script: |
          mkdir -p ~/frontend

  env-file:
    runs-on: ubuntu-latest
    needs: create-folder
    environment: Production

    steps:
      - name: Create .env file
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          port: ${{ secrets.SSH_PORT }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          script: |
            echo -e "NUXT_API_BASE_URL=${{ secrets.NUXT_API_BASE_URL }}" > ~/frontend/.env

  docker-compose-files:
    runs-on: ubuntu-latest
    needs: create-folder
    environment: Production

    steps:
    - name: Checkout the code
      uses: actions/checkout@v4

    - name: Copy docker-compose.prod.yml
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.SSH_HOST }}
        port: ${{ secrets.SSH_PORT }}
        username: ${{ secrets.SSH_USERNAME }}
        password: ${{ secrets.SSH_PASSWORD }}
        source: "docker/docker-compose.prod.yml"
        target: "~/frontend"
        strip_components: 1

    - name: Create docker-compose override
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.SSH_HOST }}
        port: ${{ secrets.SSH_PORT }}
        username: ${{ secrets.SSH_USERNAME }}
        password: ${{ secrets.SSH_PASSWORD }}
        script: |
          echo -e "services:\n  web:\n    image: ghcr.io/carum98/skyradio-frontend:latest" > ~/frontend/docker-compose.override.yml

  docker-compose-up:
    runs-on: ubuntu-latest
    needs: [pull-image, env-file, docker-compose-files]
    environment: Production

    steps:
    - name: Docker Compose Up
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.SSH_HOST }}
        port: ${{ secrets.SSH_PORT }}
        username: ${{ secrets.SSH_USERNAME }}
        password: ${{ secrets.SSH_PASSWORD }}
        script: |
          cd ~/frontend &&
          # Check if the container is running
          if [ "$(docker ps -q -f name=skyradio-frontend)" ]; then
            # Stop the container
            docker compose -f docker-compose.prod.yml down
          fi &&
          # Start the container
          docker compose -f docker-compose.prod.yml -f docker-compose.override.yml --env-file .env up -d
